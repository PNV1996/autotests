{"name": "test_add_items_and_checkout[standard_user-secret_sauce1-Brad-Smith-435345]", "status": "failed", "statusDetails": {"message": "Failed: Логин завершился с ошибкой", "trace": "page = <Page url='https://www.saucedemo.com/'>, username = 'standard_user', password = 'secret_sauce1', first_name = 'Brad', last_name = 'Smith', postal_code = '435345'\n\n    @pytest.mark.parametrize(\n        \"username, password, first_name, last_name, postal_code\",\n        [\n            (\"standard_user\", \"secret_sauce\", \"Jon\", \"Doe\", \"234235\"),\n            (\"standard_user\", \"secret_sauce1\", \"Brad\", \"Smith\", \"435345\"),\n            (\"locked_out_user\", \"secret_sauce\", \"Senen\", \"Hill\", \"345\"),\n            # (\"problem_user\", \"secret_sauce\", \"Niko\", \"Smith\", \"345\"),\n            # (\"performance_glitch_user\", \"secret_sauce\", \"Brad\", \"Smith\", \"123456\"),\n            # (\"error_user\", \"secret_sauce\", \"Alice\", \"Smith\", \"123456\"),\n            # (\"visual_user\", \"secret_sauce\", \"Alice\", \"Smith\", \"123456\"),\n    \n    \n        ]\n    )\n    \n    \n    \n    def test_add_items_and_checkout(page, username, password, first_name, last_name, postal_code):\n        login_page=LoginPage(page)\n        inventory_page=InventoryPage(page)\n        checkout_page=CheckoutPage(page)\n    \n        logger.info(\"Начинаем логин\")\n        try:\n>           login_page.login(username, password)\n\nUI\\pomodoro\\tests\\test_happy.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nUI\\pomodoro\\Pages\\login_page.py:23: in login\n    self.assert_text_present_on_page(\"Products\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <UI.pomodoro.Pages.login_page.LoginPage object at 0x0000029D53845E50>, text = 'Products'\n\n    def assert_text_present_on_page(self, text):\n>       expect(self.page.locator(\"body\")).to_contain_text(text)\nE       AssertionError: Locator expected to contain text 'Products'\nE       Actual value: Swag LabsEpic sadface: Username and password do not match any user in this serviceLoginAccepted usernames are:standard_userlocked_out_userproblem_userperformance_glitch_usererror_uservisual_userPassword for all users:secret_sauce \nE       Call log:\nE         - LocatorAssertions.to_contain_text with timeout 5000ms\nE         - waiting for locator(\"body\")\nE           9 × locator resolved to <body>…</body>\nE             - unexpected value \"Swag LabsEpic sadface: Username and password do not match any user in this serviceLoginAccepted usernames are:standard_userlocked_out_userproblem_userperformance_glitch_usererror_uservisual_userPassword for all users:secret_sauce\"\n\nUI\\pomodoro\\Pages\\base_page.py:37: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\npage = <Page url='https://www.saucedemo.com/'>, username = 'standard_user', password = 'secret_sauce1', first_name = 'Brad', last_name = 'Smith', postal_code = '435345'\n\n    @pytest.mark.parametrize(\n        \"username, password, first_name, last_name, postal_code\",\n        [\n            (\"standard_user\", \"secret_sauce\", \"Jon\", \"Doe\", \"234235\"),\n            (\"standard_user\", \"secret_sauce1\", \"Brad\", \"Smith\", \"435345\"),\n            (\"locked_out_user\", \"secret_sauce\", \"Senen\", \"Hill\", \"345\"),\n            # (\"problem_user\", \"secret_sauce\", \"Niko\", \"Smith\", \"345\"),\n            # (\"performance_glitch_user\", \"secret_sauce\", \"Brad\", \"Smith\", \"123456\"),\n            # (\"error_user\", \"secret_sauce\", \"Alice\", \"Smith\", \"123456\"),\n            # (\"visual_user\", \"secret_sauce\", \"Alice\", \"Smith\", \"123456\"),\n    \n    \n        ]\n    )\n    \n    \n    \n    def test_add_items_and_checkout(page, username, password, first_name, last_name, postal_code):\n        login_page=LoginPage(page)\n        inventory_page=InventoryPage(page)\n        checkout_page=CheckoutPage(page)\n    \n        logger.info(\"Начинаем логин\")\n        try:\n            login_page.login(username, password)\n            if page.locator('.error-message-container').is_visible():\n                error_text = page.locator('.error-message-container').inner_text()\n                logger.warning(f\"Ошибка при авторизации: {error_text}\")\n                pytest.fail(f\"Ошибка авторизации: {error_text}\")\n        except Exception as e:\n            logger.error(f\"Ошибка при авторизации: {str(e)}\")\n>           pytest.fail(\"Логин завершился с ошибкой\")\nE           Failed: Логин завершился с ошибкой\n\nUI\\pomodoro\\tests\\test_happy.py:46: Failed"}, "attachments": [{"name": "Failure Screenshot", "source": "0fc11101-1b47-4617-98b3-741a1aff2785-attachment.png", "type": "image/png"}, {"name": "log", "source": "45fe0812-e380-455c-aa23-763c03e652da-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "59d6ee12-a0c0-4c13-9c29-cccee17cfc0e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "username", "value": "'standard_user'"}, {"name": "password", "value": "'secret_sauce1'"}, {"name": "first_name", "value": "'Brad'"}, {"name": "last_name", "value": "'Smith'"}, {"name": "postal_code", "value": "'435345'"}], "start": 1751621619747, "stop": 1751621626166, "uuid": "79f552c2-6ad4-4cc5-af99-9160e41b6a04", "historyId": "50ea1f2952df7012b6c1ae5e218f7e1c", "testCaseId": "4a766320b73f12f7002beeb72e2fd269", "fullName": "UI.pomodoro.tests.test_happy#test_add_items_and_checkout", "labels": [{"name": "parentSuite", "value": "UI.pomodoro.tests"}, {"name": "suite", "value": "test_happy"}, {"name": "host", "value": "DESKTOP-NQVR7IN"}, {"name": "thread", "value": "2484-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "UI.pomodoro.tests.test_happy"}]}