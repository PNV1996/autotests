name: Python CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Забираем код
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Устанавливаем Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # 3️⃣ Устанавливаем зависимости из requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4️⃣ Устанавливаем браузеры для Playwright
      - name: Install Playwright Browsers
        run: |
          python -m playwright install --with-deps

      # 5️⃣ Проверяем стиль кода
      - name: Run linters
        run: |
          black --check .

      # 6️⃣ Запускаем тесты через pytest с Allure
      - name: Run tests with pytest
        run: |
          pytest --junitxml=report.xml --alluredir=allure-results

      # 7️⃣ Устанавливаем Allure CLI через официальный архив
      - name: Install Allure CLI
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.34.1/allure-2.34.1.tgz
          tar -zxvf allure-2.34.1.tgz
          sudo mv allure-2.34.1 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
          allure --version

      # 8️⃣ Генерируем HTML-отчет Allure
      - name: Generate Allure Report
        run: |
          allure generate allure-results --clean -o allure-report

      # 9️⃣ Загружаем HTML-отчет как артефакт
      - name: Upload Allure HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report/
