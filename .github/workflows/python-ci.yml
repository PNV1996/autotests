name: Python CI with Allure Report

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test-and-allure:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Забираем код
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Устанавливаем Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # 3️⃣ Устанавливаем зависимости
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m playwright install --with-deps

      # 4️⃣ Проверяем стиль кода
      - name: Run linters
        run: black --check .

      # 5️⃣ Запускаем тесты с генерацией Allure результатов
      - name: Run tests with pytest
        run: pytest --junitxml=report.xml --alluredir=allure-results

      # 6️⃣ Устанавливаем Java и Allure CLI
      - name: Install Java & Allure CLI
        run: |
          sudo apt update && sudo apt install -y openjdk-17-jdk wget
          wget https://github.com/allure-framework/allure2/releases/download/2.34.1/allure-2.34.1.tgz
          tar -zxvf allure-2.34.1.tgz
          sudo mv allure-2.34.1 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
          allure --version

      # 7️⃣ Генерируем HTML-отчёт
      - name: Generate Allure Report
        run: allure generate allure-results --clean -o allure-report

      # 8️⃣ Деплой отчёта на GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report

      # 9️⃣ Выводим ссылку на отчёт
      - name: Show Allure Report URL
        run: |
          echo "Allure Report URL: https://${{ github.repository_owner }}.github.io/${{ github.repository }}/"
